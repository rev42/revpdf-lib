<?php
namespace RevPDFLib\Tests;

use RevPDFLib\Exporter\PdfExporter;
use RevPDFLib\Report;
use RevPDFLib\Wrapper\TfpdfWrapper;
use RevPDFLib\Writer\TfpdfWriter;

/**
 * Test class for AbstractElement.
 * Generated by PHPUnit on 2012-02-12 at 11:07:53.
 */
class PdfExporterTest extends \PHPUnit_Framework_TestCase
{
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $reportData = array(
            'report' => array(
                'author' => 'authorValue',
                'displayModeZoom' => 'displayModeZoomValue',
                'displayModeLayout' => 'displayModeLayoutValue',
                'keywords' => 'keywordsValue',
                'subject' => 'subjectValue',
                'title' => 'titleValue',
                'leftMargin' => '20',
                'topMargin' => '10',
                'rightMargin' => '5',
                'bottomMargin' => '15',
                'pageOrientation' => 'P',
                'paperFormat' => 'A3'
            ),
        );
        $report = new Report();
        $report->setAllProperties($reportData);

        $wrapper = new TfpdfWrapper(new TfpdfWriter());

        $this->object = new PdfExporter($wrapper, $report);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers RevPDFLib\Exporter\PdfExporter::buildDocument
     */
    public function testBuildDocument()
    {
        $reportData = array(
            'report' => array(
                'author' => 'authorValue',
                'displayModeZoom' => 'fullpage',
                'displayModeLayout' => 'continuous',
                'keywords' => 'keywordsValue',
                'subject' => 'subjectValue',
                'title' => 'titleValue',
                'leftMargin' => '20',
                'topMargin' => '10',
                'rightMargin' => '5',
                'bottomMargin' => '15',
                'pageOrientation' => 'P',
                'paperFormat' => 'A3'
            ),
            'reportheader' => array(
                'height' => '10',
                'isVisible' => '1',
                'backgroundColor' => '#FFF',
                'isPageJump' => '0',
                'elements' => array(
                    array(
                        "value" => "ReportHeader textfield1",
                        "type" => "textfield",
                        "format" => "text",
                        "posX" => "0",
                        "posY" => "0",
                        "height" => "5",
                        "width" => "20",
                        "border" => 1,
                    ),
                    array(
                        "value" => "ReportHeader textfield2",
                        "type" => "textfield",
                        "format" => "text",
                        "posX" => "0",
                        "posY" => "5",
                        "height" => "5",
                        "width" => "20",
                        "border" => 1,
                    )
                )
            )
        );

        $this->object->buildDocument($reportData);
        $this->assertCount(1, $this->object->getReport()->getParts());
        $this->assertCount(2, $this->object->getReport()->getPart('reportheader')->getElements());
    }

}
